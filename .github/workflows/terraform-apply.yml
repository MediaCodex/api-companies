name: 'Deploy Terraform'

on:
  push:
    branches:
      - master
    paths:
      - 'terraform/**'
  pull_request:
    branches:
      -  master
    paths:
      - 'terraform/**'
    types:
      - closed

env:
  PROJECT: companies
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  IS_MERGED_PR: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == 'true' }}

jobs:
  development:
    name: 'Development'
    runs-on: ubuntu-latest
    environment: Development

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}

    # Use the Bash shell and set working dir
    defaults:
      run:
        shell: bash
        working-directory: terraform/
    
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize terraform and select workspace.
      - name: Init Terraform
        run: |
          terraform init
          terraform workspace select dev

      # Auto apply
      - name: Auto apply
        if: ${{ github.event_name == 'push' }}
        run: terraform apply -auto-approve

      # Download plan
      - name: Download plan
        uses: keithweaver/aws-s3-github-action@master
        if: ${{ env.IS_MERGED_PR == true }}
        env:
          source: s3://terraform-plan-mediacodex/dev/$PROJECT/${{ github.event.number }}.tfplan
          destination: ./dev.tfplan

      # Apply plan
      - name: Apply plan
        if: ${{ env.IS_MERGED_PR == true }}
        run: terraform apply -auto-approve dev.tfplan


  production:
    name: 'Production'
    runs-on: ubuntu-latest
    environment: Production

    # enforce dev-first and PR only deployments
    needs: [development]
    if: ${{ env.IS_MERGED_PR == true }}

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}

    # Use the Bash shell and set working dir
    defaults:
      run:
        shell: bash
        working-directory: terraform/
    
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize terraform and select workspace.
      - name: Init Terraform
        run: |
          terraform init
          terraform workspace select prod

      # Download plan
      - name: Download plan
        uses: keithweaver/aws-s3-github-action@master
        env:
          source: s3://terraform-plan-mediacodex/prod/$PROJECT/${{ github.event.number }}.tfplan
          destination: ./prod.tfplan

      # Apply plan
      - name: Apply Plan
        run: terraform apply -auto-approve prod.tfplan